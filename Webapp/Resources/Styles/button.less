input[type="button"], .button, button, select {
	display: inline-block; border-radius: 0.4em; color: rgb(50,50,50); font-weight: bold; padding: 0.25em 0.5em;
	.background-linear-gradient(white,gainsboro); .box-shadow(0 0 0.5em silver); border: none; border: 1px solid darkgray;
	margin-right: 0.2cm;

	span.icon { display: inline; margin: 0; font-size: 1.2em; color: inherit; }

	&:hover {
		color: black;
		border-color: gray;
		.box-shadow(0 0 0.5em gray);

		span.icon { color: inherit; }
	}

	&:active {
		color: black;
		.background-linear-gradient(gray,silver);
	}

	&.error, &.red {
		.background-linear-gradient(red,maroon);

		&:hover {
			.background-linear-gradient(brown, rgb(100,0,0));
		}
	}

	&.black {
		color: gainsboro;
		.background-linear-gradient(rgb(85,85,80),rgb(60,60,55));
		border-color: rgb(90,90,80);
		.box-shadow(0 0 0.25em rgb(60,60,55));

		&:hover { color: white; border-color: rgb(120,120,110); }
	}

	&.blue {
		.background-linear-gradient(deepskyblue,rgb(0,75,120));
		border-color: midnightblue;

		&:hover {
			.background-linear-gradient(rgb(0,170,240),rgb(0,60,100));
		}
	}

	&.green, &.success {
		.background-linear-gradient(mediumseagreen, darkgreen);
		border-color: rgb(0,50,0);

		&:hover {
			.background-linear-gradient(rgb(45,165,100), rgb(0,85,0));
		}

		&:active {
			.background-linear-gradient(rgb(20,115,60), rgb(0,75,0));
		}
	}
}

select {
	padding: 0.25em;
	
	option {
		border: none;
		:last-child { border-bottom-right-radius: 0.25em; border-bottom-left-radius: 0.25em; };
	}
}

label {
	padding: 0.25em;
}

input[type="button"][disable="disable"], .button[disable="disable"], button[disable="disable"], select[disable="disable"] {
	background: white; color: gray;
	.background-linear-gradient(white,silver);
	border-color: gray; .box-shadow(none);
}

input[type="button"].error, .button.error, button.error {
	background: red;
	.background-linear-gradient(red,maroon);
}

a.button { text-decoration: none; }
